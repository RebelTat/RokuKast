# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarCloud analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# Free for open source project.

# 1. Login to SonarCloud.io using your GitHub account

# 2. Import your project on SonarCloud
#     * Add your GitHub organization first, then add your repository as a new project.
#     * Please note that many languages are eligible for automatic analysis,
#       which means that the analysis will start automatically without the need to set up GitHub Actions.
#     * This behavior can be changed in Administration > Analysis Method.
#
# 3. Follow the SonarCloud in-product tutorial
#     * a. Copy/paste the Project Key and the Organization Key into the args parameter below
#          (You'll find this information in SonarCloud. Click on "Information" at the bottom left)
#
#     * b. Generate a new token and add it to your Github repository's secrets using the name SONAR_TOKEN
#          (On SonarCloud, click on your avatar on top-right > My account > Security
#           or go directly to https://sonarcloud.io/account/security/)

# Feel free to take a look at our documentation (https://docs.sonarcloud.io/getting-started/github/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/help/sc/9)


on:
  # Trigger analysis when pushing in master or pull requests, and when creating a pull request.
  push:
    branches:
      - master
  pull_request:
      types: [opened, synchronize, reopened]
name: Main Workflow
permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results
jobs:
  sonarcloud:
    name: SonarCloud   
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.SONAR_TOKEN_GITHUB }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Analysis:
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
       uses: sonarsource/sonarcloud-github-action@master
         projectBaseDir: my-custom-directory
         args: >
           -Dsonar.organization=rebeltat           # Unique organization key.
           -Dsonar.projectKey=RebelTat_RokuKast    # Unique project key.sonar.projectKey=my-projectkey
           -Dsonar.sources= /, src/                # lib/, Comma-separated paths to source files directories.
           -Dsonar.verbose=true                    # default is false      
          #-Dsonar.python.coverage.reportPaths=coverage.xml
          #-Dsonar.test.exclusions=tests/**
          #-Dsonar.tests=                          # tests/,  Comma-separated paths to test source directories. 
                                           # https://docs.sonarcloud.io/enriching/test-coverage/overview/
             
